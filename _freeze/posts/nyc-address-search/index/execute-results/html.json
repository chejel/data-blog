{
  "hash": "16de5b68526d1789a285a2aeaaa42327",
  "result": {
    "markdown": "---\ntitle: \"NYC Address Search Map\"\nauthor: \"\"\ndate: \"2023-04-04\"\ncategories: [JavaScript, map]\nimage: \"\"\neditor_options: \n  chunk_output_type: console\n---\n\n## Introduction\nWhile making <a href=\"https://github.com/ccmnewmarkj/sbrf-map/first\" target=\"_blank\">this scrollytelling map</a> of small business stories, using a <a href=\"https://blog.mapbox.com/how-to-build-a-scrollytelling-map-ead6baf2cd1b\" target=\"_blank\">Mapbox template</a>, I had an address for each featured business and would sometimes have to find the New York City neighborhood in which the business was located. For this, I used <a href=\"https://locality.nyc/\" target=\"_blank\">locality.nyc</a> but at the same time thinking, as an exercise in using JavaScript and Mapbox, to create a tool with the same purpose: <strong>Enter an address and see the location on the map and the name of the corresponding neighborhood</strong>. <a href=\"https://chejel.github.io/nyc-address-search\" target=\"_blank\">Here is the result</a>:\n<div class=\"images-ss\">\n<a href=\"https://chejel.github.io/nyc-address-search/\"><img src=\"./../../work/nyc-address-search/nyc-address-search-ss.png\" width=\"650\" /></a>\n</div>\n\nNote: NYC is composed of an unofficial number of neighborhoods, the boundaries and names of which can be up for debate. The GeoJSON map used here is from Pedicities and includes 310 neighborhoods, with the Bronx, Queens and Brooklyn containing more two-thirds of them.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(sf)\nlibrary(knitr)\nneighborhoods <- st_read(\"https://gist.githubusercontent.com/chejel/0c22288b06cdf04a215696c4d39d3434/raw/7f1df28e1a66230927f613f8a0bd42f30d7fa8f6/nyc_neighborhoods.geojson\", quiet = TRUE)\nneighborhoods %>%\n  # remove geometry variable to better view dataframe\n  st_set_geometry(NULL) %>%\n  count(borough) %>%\n  select(Borough = borough, `Number of Neighborhoods` = n) %>%\n  kable()\n```\n\n::: {.cell-output-display}\n|Borough       | Number of Neighborhoods|\n|:-------------|-----------------------:|\n|Bronx         |                      75|\n|Brooklyn      |                      71|\n|Manhattan     |                      37|\n|Queens        |                      73|\n|Staten Island |                      54|\n:::\n:::\n\n<hr />\n\n## Build the Map Using Mapbox GL JS\nUsing the Pediacities GeoJSON and <a href=\"https://docs.mapbox.com/mapbox-gl-js/example/\" target=\"_blank\">Mapbox GL JS examples</a>, here is a step-by-step guide of one way to create the map. To be able to show the maps here, the code blocks include code for <a href=\"https://quarto.org/docs/interactive/ojs/\" target=\"_blank\">Observable JS in Quarto</a>, separate from what would be needed for using Mapbox GL JS in basic JavaScript files.\n\n### 1. Load the basemap\n\n- Source: [Display a map on a webpage](https://docs.mapbox.com/mapbox-gl-js/example/simple-map/)\n- Basemaps: [Standard styles](https://docs.mapbox.com/api/maps/styles/) and [ones you can add](https://www.mapbox.com/gallery) to your studio\n```{{ojs}}\nmapboxgl.accessToken = \"pk.eyJ1IjoiamVuY2hlIiwiYSI6ImNrd29rZDJkZzAzb3gyb284YzN6NGpweHAifQ.Vh1oWQm_LJyRcac6qMXTMQ\";\n\n// initialize map\nnew mapboxgl.Map({\n  container: \"map\",\n  style: \"mapbox://styles/mapbox/satellite-v9\",\n  center: [-74.006, 40.713],\n  zoom: 10,\n});\n```\n\n### 2. Add a geocoder\nThe geocoder input field lets the user enter an address, which then brings up a list of matching addresses from the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/geocoding/). Once an address is selected, the map zooms in to the location and adds a marker. I'm using the same code as above, with the geocoder control added.\n\n- Source: [Add a geocoder](https://docs.mapbox.com/mapbox-gl-js/example/mapbox-gl-geocoder/)\n\n\n```{ojs}\nviewof map = {\n  \n  mapboxgl.accessToken = \"pk.eyJ1IjoiamVuY2hlIiwiYSI6ImNrd29rZDJkZzAzb3gyb284YzN6NGpweHAifQ.Vh1oWQm_LJyRcac6qMXTMQ\";\n\n  // 1. initialize map\n  const map = new mapboxgl.Map({\n    container: \"map\",\n    style: \"mapbox://styles/mapbox/satellite-v9\",\n    center: [-74.006, 40.713],\n    zoom: 10,\n  });\n  \n  // 2. ADDED: Add geocoder\n  map.addControl(\n    new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        mapboxgl: mapboxgl\n    })\n  );\n}\n```\n\n\n\n<script src='https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.js'></script>\n<link href='https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.css' rel='stylesheet' />\n<!-- Load the `mapbox-gl-geocoder` plugin. -->\n<script src=\"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.css\" type=\"text/css\">\n\n<style>\n#map { height: 500px; }\n</style>\n\n<div id=\"map\"></div>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}